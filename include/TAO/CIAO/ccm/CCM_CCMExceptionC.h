// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:149

#ifndef _TAO_IDL_CCM_CCMEXCEPTIONC_Z8W8AG_H_
#define _TAO_IDL_CCM_CCMEXCEPTIONC_Z8W8AG_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "CCM_LEM_Stub_Export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 3 || TAO_BETA_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CCM_LEM_STUB_Export

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:35

namespace Components
{

  // TAO_IDL - Generated from
  // be\be_visitor_enum\enum_ch.cpp:44

  enum CCMExceptionReason
  {
    SYSTEM_ERROR,
    CREATE_ERROR,
    REMOVE_ERROR,
    DUPLICATE_KEY,
    FIND_ERROR,
    OBJECT_NOT_FOUND,
    NO_SUCH_ENTITY,
    QOS_ERROR,
    REGISTRATION_ERROR,
    SERVICE_INSTALLATION_ERROR
  };

  typedef CCMExceptionReason &CCMExceptionReason_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode\typecode_decl.cpp:34

  extern CCM_LEM_STUB_Export ::CORBA::TypeCode_ptr const _tc_CCMExceptionReason;

  // TAO_IDL - Generated from
  // be\be_visitor_exception\exception_ch.cpp:41

  class CCM_LEM_STUB_Export CCMException : public ::CORBA::UserException
  {
  public:
    Components::CCMExceptionReason reason;

    CCMException (void);
    CCMException (const CCMException &);
    ~CCMException (void);

    CCMException &operator= (const CCMException &);

    static void _tao_any_destructor (void *);

    static CCMException *_downcast ( ::CORBA::Exception *);
    static const CCMException *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // be\be_visitor_exception\exception_ctor.cpp:51

    CCMException (
        Components::CCMExceptionReason _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode\typecode_decl.cpp:34

  extern CCM_LEM_STUB_Export ::CORBA::TypeCode_ptr const _tc_CCMException;

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:64

} // module Components

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::Components::CCMExceptionReason>
    : public
        Basic_Arg_Traits_T<
            ::Components::CCMExceptionReason,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_enum\any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Components
{
  

  CCM_LEM_STUB_Export void operator<<= (::CORBA::Any &, ::Components::CCMExceptionReason);
  CCM_LEM_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Components::CCMExceptionReason &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



CCM_LEM_STUB_Export void operator<<= (::CORBA::Any &, Components::CCMExceptionReason);
CCM_LEM_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Components::CCMExceptionReason &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be\be_visitor_exception\any_op_ch.cpp:38

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Components
{
  

  CCM_LEM_STUB_Export void operator<<= (::CORBA::Any &, const ::Components::CCMException &); // copying version
  CCM_LEM_STUB_Export void operator<<= (::CORBA::Any &, ::Components::CCMException*); // noncopying version
  CCM_LEM_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Components::CCMException *&); // deprecated
CCM_LEM_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Components::CCMException *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



CCM_LEM_STUB_Export void operator<<= (::CORBA::Any &, const Components::CCMException &); // copying version
CCM_LEM_STUB_Export void operator<<= (::CORBA::Any &, Components::CCMException*); // noncopying version
CCM_LEM_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Components::CCMException *&); // deprecated
CCM_LEM_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Components::CCMException *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be\be_visitor_enum\cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

CCM_LEM_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Components::CCMExceptionReason _tao_enumerator);
CCM_LEM_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Components::CCMExceptionReason &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_exception\cdr_op_ch.cpp:37
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



CCM_LEM_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CCMException &);
CCM_LEM_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Components::CCMException &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1700
#include /**/ "ace/post.h"

#endif /* ifndef */

