// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:149

#ifndef _TAO_IDL_CCM_SESSIONCOMPONENTC_BC6E2S_H_
#define _TAO_IDL_CCM_SESSIONCOMPONENTC_BC6E2S_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "CCM_Session_Stub_Export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ccm/CCM_CCMExceptionC.h"
#include "ccm/CCM_EnterpriseComponentC.h"
#include "ccm/Session/CCM_SessionContextC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 3 || TAO_BETA_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CCM_SESSION_STUB_Export

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:35

namespace Components
{

  // TAO_IDL - Generated from
  // be\be_interface.cpp:748

#if !defined (_COMPONENTS_SESSIONCOMPONENT__VAR_OUT_CH_)
#define _COMPONENTS_SESSIONCOMPONENT__VAR_OUT_CH_

  class SessionComponent;
  typedef SessionComponent *SessionComponent_ptr;

  typedef
    TAO_Objref_Var_T<
        SessionComponent
      >
    SessionComponent_var;
  
  typedef
    TAO_Objref_Out_T<
        SessionComponent
      >
    SessionComponent_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:40

  class CCM_SESSION_STUB_Export SessionComponent
    : public virtual ::Components::EnterpriseComponent
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:304

    typedef SessionComponent_ptr _ptr_type;
    typedef SessionComponent_var _var_type;
    typedef SessionComponent_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SessionComponent_ptr _duplicate (SessionComponent_ptr obj);

    static void _tao_release (SessionComponent_ptr obj);

    static SessionComponent_ptr _narrow (::CORBA::Object_ptr obj);
    static SessionComponent_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SessionComponent_ptr _nil (void);

    virtual void set_session_context (
      ::Components::SessionContext_ptr ctx) = 0;

    virtual void configuration_complete (
      void) = 0;

    virtual void ccm_activate (
      void) = 0;

    virtual void ccm_passivate (
      void) = 0;

    virtual void ccm_remove (
      void) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    SessionComponent (void);

    

    virtual ~SessionComponent (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SessionComponent (const SessionComponent &);

    void operator= (const SessionComponent &);
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode\typecode_decl.cpp:34

  extern CCM_SESSION_STUB_Export ::CORBA::TypeCode_ptr const _tc_SessionComponent;

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:64

} // module Components

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COMPONENTS_SESSIONCOMPONENT__TRAITS_)
#define _COMPONENTS_SESSIONCOMPONENT__TRAITS_

  template<>
  struct CCM_SESSION_STUB_Export Objref_Traits< ::Components::SessionComponent>
  {
    static ::Components::SessionComponent_ptr duplicate (
        ::Components::SessionComponent_ptr p);
    static void release (
        ::Components::SessionComponent_ptr p);
    static ::Components::SessionComponent_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Components::SessionComponent_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Components
{
  CCM_SESSION_STUB_Export void operator<<= ( ::CORBA::Any &, SessionComponent_ptr); // copying
  CCM_SESSION_STUB_Export void operator<<= ( ::CORBA::Any &, SessionComponent_ptr *); // non-copying
  CCM_SESSION_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SessionComponent_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

CCM_SESSION_STUB_Export void operator<<= (::CORBA::Any &, Components::SessionComponent_ptr); // copying
CCM_SESSION_STUB_Export void operator<<= (::CORBA::Any &, Components::SessionComponent_ptr *); // non-copying
CCM_SESSION_STUB_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Components::SessionComponent_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be\be_codegen.cpp:1700
#include /**/ "ace/post.h"

#endif /* ifndef */

