// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:149

#ifndef _TAO_IDL_AMI4CCMEC_AHBM0F_H_
#define _TAO_IDL_AMI4CCMEC_AHBM0F_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "ami4ccm_lem_stub_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ccm/CCM_EventsC.h"
#include "ccm/CCM_HomeC.h"
#include "ccm/CCM_ObjectC.h"
#include "ccm/CCM_CCMExceptionC.h"
#include "ccm/CCM_HomeExecutorBaseC.h"
#include "ccm/Session/CCM_SessionComponentC.h"
#include "ami4ccmC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 3 || TAO_BETA_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO AMI4CCM_LEM_STUB_Export

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:35

namespace CCM_AMI
{

  // TAO_IDL - Generated from
  // be\be_interface.cpp:748

#if !defined (_CCM_AMI_CCM_EXCEPTIONHOLDER__VAR_OUT_CH_)
#define _CCM_AMI_CCM_EXCEPTIONHOLDER__VAR_OUT_CH_

  class CCM_ExceptionHolder;
  typedef CCM_ExceptionHolder *CCM_ExceptionHolder_ptr;

  typedef
    TAO_Objref_Var_T<
        CCM_ExceptionHolder
      >
    CCM_ExceptionHolder_var;
  
  typedef
    TAO_Objref_Out_T<
        CCM_ExceptionHolder
      >
    CCM_ExceptionHolder_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:40

  class AMI4CCM_LEM_STUB_Export CCM_ExceptionHolder
    : public virtual ::CCM_AMI::ExceptionHolder
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:304

    typedef CCM_ExceptionHolder_ptr _ptr_type;
    typedef CCM_ExceptionHolder_var _var_type;
    typedef CCM_ExceptionHolder_out _out_type;

    // The static operations.
    static CCM_ExceptionHolder_ptr _duplicate (CCM_ExceptionHolder_ptr obj);

    static void _tao_release (CCM_ExceptionHolder_ptr obj);

    static CCM_ExceptionHolder_ptr _narrow (::CORBA::Object_ptr obj);
    static CCM_ExceptionHolder_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static CCM_ExceptionHolder_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    CCM_ExceptionHolder (void);

    

    virtual ~CCM_ExceptionHolder (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    CCM_ExceptionHolder (const CCM_ExceptionHolder &);

    void operator= (const CCM_ExceptionHolder &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:64

} // module CCM_AMI

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:35

namespace CCM_AMI
{

  // TAO_IDL - Generated from
  // be\be_interface.cpp:748

#if !defined (_CCM_AMI_CCM_REPLYHANDLER__VAR_OUT_CH_)
#define _CCM_AMI_CCM_REPLYHANDLER__VAR_OUT_CH_

  class CCM_ReplyHandler;
  typedef CCM_ReplyHandler *CCM_ReplyHandler_ptr;

  typedef
    TAO_Objref_Var_T<
        CCM_ReplyHandler
      >
    CCM_ReplyHandler_var;
  
  typedef
    TAO_Objref_Out_T<
        CCM_ReplyHandler
      >
    CCM_ReplyHandler_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:40

  class AMI4CCM_LEM_STUB_Export CCM_ReplyHandler
    : public virtual ::CCM_AMI::ReplyHandler
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:304

    typedef CCM_ReplyHandler_ptr _ptr_type;
    typedef CCM_ReplyHandler_var _var_type;
    typedef CCM_ReplyHandler_out _out_type;

    // The static operations.
    static CCM_ReplyHandler_ptr _duplicate (CCM_ReplyHandler_ptr obj);

    static void _tao_release (CCM_ReplyHandler_ptr obj);

    static CCM_ReplyHandler_ptr _narrow (::CORBA::Object_ptr obj);
    static CCM_ReplyHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static CCM_ReplyHandler_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    CCM_ReplyHandler (void);

    

    virtual ~CCM_ReplyHandler (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    CCM_ReplyHandler (const CCM_ReplyHandler &);

    void operator= (const CCM_ReplyHandler &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:64

} // module CCM_AMI

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:35

namespace CCM_AMI
{

  // TAO_IDL - Generated from
  // be\be_interface.cpp:748

#if !defined (_CCM_AMI_CCM_AMI4CCM_BASE__VAR_OUT_CH_)
#define _CCM_AMI_CCM_AMI4CCM_BASE__VAR_OUT_CH_

  class CCM_AMI4CCM_Base;
  typedef CCM_AMI4CCM_Base *CCM_AMI4CCM_Base_ptr;

  typedef
    TAO_Objref_Var_T<
        CCM_AMI4CCM_Base
      >
    CCM_AMI4CCM_Base_var;
  
  typedef
    TAO_Objref_Out_T<
        CCM_AMI4CCM_Base
      >
    CCM_AMI4CCM_Base_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:40

  class AMI4CCM_LEM_STUB_Export CCM_AMI4CCM_Base
    : public virtual ::Components::EnterpriseComponent
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:304

    typedef CCM_AMI4CCM_Base_ptr _ptr_type;
    typedef CCM_AMI4CCM_Base_var _var_type;
    typedef CCM_AMI4CCM_Base_out _out_type;

    // The static operations.
    static CCM_AMI4CCM_Base_ptr _duplicate (CCM_AMI4CCM_Base_ptr obj);

    static void _tao_release (CCM_AMI4CCM_Base_ptr obj);

    static CCM_AMI4CCM_Base_ptr _narrow (::CORBA::Object_ptr obj);
    static CCM_AMI4CCM_Base_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static CCM_AMI4CCM_Base_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    CCM_AMI4CCM_Base (void);

    

    virtual ~CCM_AMI4CCM_Base (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    CCM_AMI4CCM_Base (const CCM_AMI4CCM_Base &);

    void operator= (const CCM_AMI4CCM_Base &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:748

#if !defined (_CCM_AMI_CCM_AMI4CCM_BASE_CONTEXT__VAR_OUT_CH_)
#define _CCM_AMI_CCM_AMI4CCM_BASE_CONTEXT__VAR_OUT_CH_

  class CCM_AMI4CCM_Base_Context;
  typedef CCM_AMI4CCM_Base_Context *CCM_AMI4CCM_Base_Context_ptr;

  typedef
    TAO_Objref_Var_T<
        CCM_AMI4CCM_Base_Context
      >
    CCM_AMI4CCM_Base_Context_var;
  
  typedef
    TAO_Objref_Out_T<
        CCM_AMI4CCM_Base_Context
      >
    CCM_AMI4CCM_Base_Context_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:40

  class AMI4CCM_LEM_STUB_Export CCM_AMI4CCM_Base_Context
    : public virtual ::Components::SessionContext
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:304

    typedef CCM_AMI4CCM_Base_Context_ptr _ptr_type;
    typedef CCM_AMI4CCM_Base_Context_var _var_type;
    typedef CCM_AMI4CCM_Base_Context_out _out_type;

    // The static operations.
    static CCM_AMI4CCM_Base_Context_ptr _duplicate (CCM_AMI4CCM_Base_Context_ptr obj);

    static void _tao_release (CCM_AMI4CCM_Base_Context_ptr obj);

    static CCM_AMI4CCM_Base_Context_ptr _narrow (::CORBA::Object_ptr obj);
    static CCM_AMI4CCM_Base_Context_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static CCM_AMI4CCM_Base_Context_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    CCM_AMI4CCM_Base_Context (void);

    

    virtual ~CCM_AMI4CCM_Base_Context (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    CCM_AMI4CCM_Base_Context (const CCM_AMI4CCM_Base_Context &);

    void operator= (const CCM_AMI4CCM_Base_Context &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:64

} // module CCM_AMI

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:35

namespace CIAO_CCM_AMI_AMI4CCM_Base_Impl
{

  // TAO_IDL - Generated from
  // be\be_interface.cpp:748

#if !defined (_CIAO_CCM_AMI_AMI4CCM_BASE_IMPL_AMI4CCM_BASE_EXEC__VAR_OUT_CH_)
#define _CIAO_CCM_AMI_AMI4CCM_BASE_IMPL_AMI4CCM_BASE_EXEC__VAR_OUT_CH_

  class AMI4CCM_Base_Exec;
  typedef AMI4CCM_Base_Exec *AMI4CCM_Base_Exec_ptr;

  typedef
    TAO_Objref_Var_T<
        AMI4CCM_Base_Exec
      >
    AMI4CCM_Base_Exec_var;
  
  typedef
    TAO_Objref_Out_T<
        AMI4CCM_Base_Exec
      >
    AMI4CCM_Base_Exec_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:40

  class AMI4CCM_LEM_STUB_Export AMI4CCM_Base_Exec
    : public virtual ::CCM_AMI::CCM_AMI4CCM_Base,
      public virtual ::Components::SessionComponent
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:304

    typedef AMI4CCM_Base_Exec_ptr _ptr_type;
    typedef AMI4CCM_Base_Exec_var _var_type;
    typedef AMI4CCM_Base_Exec_out _out_type;

    // The static operations.
    static AMI4CCM_Base_Exec_ptr _duplicate (AMI4CCM_Base_Exec_ptr obj);

    static void _tao_release (AMI4CCM_Base_Exec_ptr obj);

    static AMI4CCM_Base_Exec_ptr _narrow (::CORBA::Object_ptr obj);
    static AMI4CCM_Base_Exec_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AMI4CCM_Base_Exec_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    AMI4CCM_Base_Exec (void);

    

    virtual ~AMI4CCM_Base_Exec (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    AMI4CCM_Base_Exec (const AMI4CCM_Base_Exec &);

    void operator= (const AMI4CCM_Base_Exec &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:64

} // module CIAO_CCM_AMI_AMI4CCM_Base_Impl

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CCM_AMI_CCM_EXCEPTIONHOLDER__TRAITS_)
#define _CCM_AMI_CCM_EXCEPTIONHOLDER__TRAITS_

  template<>
  struct AMI4CCM_LEM_STUB_Export Objref_Traits< ::CCM_AMI::CCM_ExceptionHolder>
  {
    static ::CCM_AMI::CCM_ExceptionHolder_ptr duplicate (
        ::CCM_AMI::CCM_ExceptionHolder_ptr p);
    static void release (
        ::CCM_AMI::CCM_ExceptionHolder_ptr p);
    static ::CCM_AMI::CCM_ExceptionHolder_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_AMI::CCM_ExceptionHolder_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CCM_AMI_CCM_REPLYHANDLER__TRAITS_)
#define _CCM_AMI_CCM_REPLYHANDLER__TRAITS_

  template<>
  struct AMI4CCM_LEM_STUB_Export Objref_Traits< ::CCM_AMI::CCM_ReplyHandler>
  {
    static ::CCM_AMI::CCM_ReplyHandler_ptr duplicate (
        ::CCM_AMI::CCM_ReplyHandler_ptr p);
    static void release (
        ::CCM_AMI::CCM_ReplyHandler_ptr p);
    static ::CCM_AMI::CCM_ReplyHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_AMI::CCM_ReplyHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CCM_AMI_CCM_AMI4CCM_BASE__TRAITS_)
#define _CCM_AMI_CCM_AMI4CCM_BASE__TRAITS_

  template<>
  struct AMI4CCM_LEM_STUB_Export Objref_Traits< ::CCM_AMI::CCM_AMI4CCM_Base>
  {
    static ::CCM_AMI::CCM_AMI4CCM_Base_ptr duplicate (
        ::CCM_AMI::CCM_AMI4CCM_Base_ptr p);
    static void release (
        ::CCM_AMI::CCM_AMI4CCM_Base_ptr p);
    static ::CCM_AMI::CCM_AMI4CCM_Base_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_AMI::CCM_AMI4CCM_Base_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CCM_AMI_CCM_AMI4CCM_BASE_CONTEXT__TRAITS_)
#define _CCM_AMI_CCM_AMI4CCM_BASE_CONTEXT__TRAITS_

  template<>
  struct AMI4CCM_LEM_STUB_Export Objref_Traits< ::CCM_AMI::CCM_AMI4CCM_Base_Context>
  {
    static ::CCM_AMI::CCM_AMI4CCM_Base_Context_ptr duplicate (
        ::CCM_AMI::CCM_AMI4CCM_Base_Context_ptr p);
    static void release (
        ::CCM_AMI::CCM_AMI4CCM_Base_Context_ptr p);
    static ::CCM_AMI::CCM_AMI4CCM_Base_Context_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_AMI::CCM_AMI4CCM_Base_Context_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CIAO_CCM_AMI_AMI4CCM_BASE_IMPL_AMI4CCM_BASE_EXEC__TRAITS_)
#define _CIAO_CCM_AMI_AMI4CCM_BASE_IMPL_AMI4CCM_BASE_EXEC__TRAITS_

  template<>
  struct AMI4CCM_LEM_STUB_Export Objref_Traits< ::CIAO_CCM_AMI_AMI4CCM_Base_Impl::AMI4CCM_Base_Exec>
  {
    static ::CIAO_CCM_AMI_AMI4CCM_Base_Impl::AMI4CCM_Base_Exec_ptr duplicate (
        ::CIAO_CCM_AMI_AMI4CCM_Base_Impl::AMI4CCM_Base_Exec_ptr p);
    static void release (
        ::CIAO_CCM_AMI_AMI4CCM_Base_Impl::AMI4CCM_Base_Exec_ptr p);
    static ::CIAO_CCM_AMI_AMI4CCM_Base_Impl::AMI4CCM_Base_Exec_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CIAO_CCM_AMI_AMI4CCM_Base_Impl::AMI4CCM_Base_Exec_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1700
#include /**/ "ace/post.h"

#endif /* ifndef */

