// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:458

#ifndef _TAO_IDL_AMI4CCMS_XUCOAO_H_
#define _TAO_IDL_AMI4CCMS_XUCOAO_H_

#include /**/ "ace/pre.h"

#include "ami4ccmC.h"
#include "ComponentsS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

#include /**/ "ami4ccm_svnt_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO AMI4CCM_SVNT_Export

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:145

#if !defined (_CCM_AMI_AMI4CCM_BASE__SARG_TRAITS_)
#define _CCM_AMI_AMI4CCM_BASE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CCM_AMI::AMI4CCM_Base>
    : public
        Object_SArg_Traits_T<
            ::CCM_AMI::AMI4CCM_Base_ptr,
            ::CCM_AMI::AMI4CCM_Base_var,
            ::CCM_AMI::AMI4CCM_Base_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_module\module_sh.cpp:35

namespace POA_CCM_AMI
{
  

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_sh.cpp:73

  class AMI4CCM_Base;
  typedef AMI4CCM_Base *AMI4CCM_Base_ptr;

  class AMI4CCM_SVNT_Export AMI4CCM_Base
    : public virtual POA_Components::CCMObject
  {
  protected:
    AMI4CCM_Base (void);
  
  public:
    /// Useful for template programming.
    typedef ::CCM_AMI::AMI4CCM_Base _stub_type;
    typedef ::CCM_AMI::AMI4CCM_Base_ptr _stub_ptr_type;
    typedef ::CCM_AMI::AMI4CCM_Base_var _stub_var_type;

    AMI4CCM_Base (const AMI4CCM_Base& rhs);
    virtual ~AMI4CCM_Base (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::CCM_AMI::AMI4CCM_Base *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_sh.cpp:66

} // module CCM_AMI

#include /**/ "ace/post.h"

#endif /* ifndef */

